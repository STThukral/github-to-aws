AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CodePipeline with CodeBuild and CodeDeploy for CI/CD

Parameters:
  GitHubToken:
    Type: String
    NoEcho: true  # Ensures the token is not displayed in CloudFormation logs
    Description: "GitHub OAuth token to access the repository"

Resources:
  # IAM Role for CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: "codepipeline.amazonaws.com"
      Policies:
        - PolicyName: "CodePipelinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "codebuild:StartBuild"
                  - "codedeploy:CreateDeployment"
                Resource: "*"

  # IAM Role for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: "codebuild.amazonaws.com"
      Policies:
        - PolicyName: "CodeBuildPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "codebuild:BatchGetBuilds"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  # IAM Role for CodeDeploy
    # IAM Role for CodeDeploy
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: "codedeploy.amazonaws.com"
      Policies:
        - PolicyName: "CodeDeployPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "codedeploy:CreateDeployment"
                  - "codedeploy:GetDeployment"
                  - "codedeploy:StopDeployment"
                  - "codedeploy:ListDeployments"
                Resource: "*"


  # CodeBuild Project
  MyCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: "MyBuildProject"
      Source:
        Type: "GITHUB"  # Correctly use 'GITHUB' (uppercase)
        Location: "https://github.com/STThukral/github-to-aws.git"  # Replace with your GitHub repository URL
        BuildSpec: ".github/workflows/crawler_buildspec_S3.yml"  # This file is in your GitHub repository
      Artifacts:
        Type: "S3"
        Location: "s3-lambda-function-code-st"  # Where to store build artifacts,Correct S3 bucket name, without trailing slash
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:5.0"
        Type: "LINUX_CONTAINER"
      ServiceRole: !GetAtt CodeBuildRole.Arn

  # CodeDeploy Application
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ComputePlatform: "Server"  # For EC2-based deployment

  # CodeDeploy Deployment Group
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      #ServiceRole: !GetAtt CodeDeployRole.Arn
      DeploymentGroupName: "MyDeploymentGroup"
      DeploymentConfigName: "CodeDeployDefault.OneAtATime"
      Ec2TagFilters:
        - Key: "Environment"
          Value: "Production"
          Type: "KEY_AND_VALUE"
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn  # Reference the CodeDeployRole ARN here

  # CodePipeline
  MyCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: "S3"
        Location: "s3-lambda-function-code-st"  # S3 bucket for pipeline artifacts
      Stages:
        - Name: "Source"
          Actions:
            - Name: "SourceAction"
              ActionTypeId:
                Category: "Source"
                Owner: "ThirdParty"
                Provider: "GitHub"
                Version: "1"
              OutputArtifacts:
                - Name: "SourceOutput"
              Configuration:
                Owner: STThukral
                Repo: "https://github.com/STThukral/github-to-aws"  # Correct URL without .git extension
                Branch: "main"  # The branch to use for the pipeline
                OAuthToken: !Ref GitHubToken  # OAuth token for GitHub access
        - Name: "Build"
          Actions:
            - Name: "BuildAction"
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              InputArtifacts:
                - Name: "SourceOutput"
              OutputArtifacts:
                - Name: "BuildOutput"
              Configuration:
                ProjectName: !Ref MyCodeBuildProject
        - Name: "Deploy"
          Actions:
            - Name: "DeployAction"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "CodeDeploy"
                Version: "1"
              InputArtifacts:
                - Name: "BuildOutput"
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployDeploymentGroup
