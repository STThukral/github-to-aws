AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  S3BucketName:
    Type: String
    Default: 'my-st-app-bucket-2025'  # Ensure unique bucket name

Resources:
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'LambdaS3Policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}/*'  # Ensure access to the bucket
              - Effect: 'Allow'
                Action:
                  - 'logs:*'
                Resource: '*'

  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: 'index.handler'  # Update based on your Lambda function entry point
      Role: !GetAtt LambdaExecutionRole.Arn
      FunctionName: 'S3EventLambdaFunction'
      Runtime: 'python3.9'
      Timeout: 60
      Code:
        ZipFile: |
          import json
          def lambda_handler(event, context):
              print("Received event: " + json.dumps(event, indent=2))
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from Lambda!')
              }

  MyS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3BucketName  # Ensure unique bucket name
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"  # Trigger on file creation
            Function: !GetAtt LambdaFunction.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: "suffix"
                    Value: ".csv"  # Optional: Trigger only for .csv files

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref LambdaFunction
      Principal: 's3.amazonaws.com'
      SourceArn: !Sub 'arn:aws:s3:::${S3BucketName}'

Outputs:
  S3BucketName:
    Value: !Ref MyS3Bucket
    Description: 'Name of the S3 Bucket'

  LambdaFunctionName:
    Value: !Ref LambdaFunction
    Description: 'Lambda function name'
